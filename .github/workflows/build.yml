name: Build Android APK
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libssl-dev \
            libffi-dev \
            python3-dev \
            git \
            zip \
            unzip \
            openjdk-11-jdk \
            wget \
            curl
      
      - name: Setup Java environment
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV
          echo "/usr/lib/jvm/java-11-openjdk-amd64/bin" >> $GITHUB_PATH
      
      - name: Install Buildozer
        run: |
          python -m pip install --upgrade pip
          pip install buildozer cython
      
      - name: Cache buildozer global directory
        uses: actions/cache@v3
        with:
          path: ~/.buildozer
          key: ${{ runner.os }}-buildozer-global-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-global-
      
      - name: Cache buildozer build directory
        uses: actions/cache@v3
        with:
          path: .buildozer
          key: ${{ runner.os }}-buildozer-build-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-build-
      
      - name: Verify buildozer.spec exists
        run: |
          if [ ! -f "buildozer.spec" ]; then
            echo "Error: buildozer.spec file not found!"
            echo "Creating a basic buildozer.spec file..."
            buildozer init
          fi
          echo "buildozer.spec found ✓"
          cat buildozer.spec
      
      - name: Make gradlew executable (if exists)
        run: |
          if [ -f "gradlew" ]; then
            chmod +x gradlew
          fi
      
      - name: Build APK with Buildozer
        run: |
          # Set environment variables for Android SDK
          export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
          export ANDROID_HOME=$ANDROID_SDK_ROOT
          export PATH=$PATH:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools
          
          # Run buildozer with proper error handling
          buildozer android debug --verbose
        env:
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx2048m"
      
      - name: Find and verify APK
        id: find_apk
        run: |
          APK_PATH=$(find . -name "*.apk" -type f | head -n 1)
          if [ -z "$APK_PATH" ]; then
            echo "Error: No APK file found!"
            echo "Searching in common directories:"
            find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found anywhere"
            ls -la bin/ 2>/dev/null || echo "bin directory not found"
            ls -la .buildozer/android/platform/build*/outputs/apk/ 2>/dev/null || echo "No build outputs found"
            exit 1
          fi
          echo "APK found: $APK_PATH"
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
          
          # Get file info
          ls -lh "$APK_PATH"
          file "$APK_PATH"
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: android-apk-${{ github.run_number }}
          path: ${{ steps.find_apk.outputs.apk_path }}
          retention-days: 30
      
      - name: Upload build logs on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-logs-${{ github.run_number }}
          path: |
            .buildozer/
            *.log
          retention-days: 7
          
      - name: Show build summary
        if: always()
        run: |
          echo "=== Build Summary ==="
          echo "Python version: $(python --version)"
          echo "Java version: $(java -version 2>&1 | head -n 1)"
          echo "Buildozer version: $(buildozer --version 2>/dev/null || echo 'Not available')"
          if [ -f "${{ steps.find_apk.outputs.apk_path }}" ]; then
            echo "✓ APK built successfully: ${{ steps.find_apk.outputs.apk_path }}"
            echo "APK size: $(du -h '${{ steps.find_apk.outputs.apk_path }}' | cut -f1)"
          else
            echo "✗ APK build failed"
          fi
